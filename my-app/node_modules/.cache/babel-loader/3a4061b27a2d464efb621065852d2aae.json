{"ast":null,"code":"import DS from '../services/DataService'; //import DataTable from 'datatables.net-vue3';\n\nexport default {\n  // components:{\n  //         DataTable\n  //     },\n  name: \"my-home\",\n\n  data() {\n    return {\n      getResult: null,\n      getId: \"\",\n      getfName: \"\",\n      getlName: \"\"\n    };\n  },\n\n  methods: {\n    formatResponse(data) {\n      return JSON.stringify(data);\n    },\n\n    async getAllData() {\n      try {\n        const container = document.getElementById(\"container\");\n        const res = await DS.getAll();\n        console.log(res);\n        container.innerHTML = \"\";\n        res.data.forEach(element => {\n          const wrapper = document.createElement(\"div\");\n          Object.values(element).forEach(value => {\n            //const keydiv= document.createElement(\"div\")\n            //keydiv.append(key)\n            wrapper.append(value + \" \");\n          }); //this.getResult\n\n          container.append(wrapper);\n        }); // const res = await DS.getAll()\n        // console.log(typeof(res.data))\n        // res.data.forEach(element =>{\n        //   this.getResult=Array(element)\n        // })\n      } catch (e) {\n        this.getResult = this.formatResponse(e.getResult);\n      }\n    },\n\n    async getDataById() {\n      let id = Number(this.getId); //console.log(id)\n\n      try {\n        const res = await DS.getById(id);\n        this.getResult = this.formatResponse(res.data);\n      } catch (error) {\n        this.getResult = this.formatResponse(error.getResult);\n      }\n    },\n\n    async searchByName() {\n      const fname = this.getfName;\n      const lname = this.getlName;\n\n      try {\n        const res = await DS.getByName(fname, lname);\n        this.getResult = this.formatResponse(res.data);\n      } catch (error) {\n        this.getResult = this.formatResponse(error.getRsult);\n      }\n    },\n\n    clearGetOutput() {\n      console.log(\"clearing output\");\n      this.getResult = null;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCE,OAAOA,EAAP,MAAe,yBAAf,C,CACA;;AACA,eAAc;EACZ;EACA;EACA;EACAC,IAAI,EAAE,SAJM;;EAKZC,IAAI,GAAE;IACJ,OAAM;MACJC,SAAS,EAAE,IADP;MAEJC,KAAK,EAAE,EAFH;MAGJC,QAAQ,EAAE,EAHN;MAIJC,QAAQ,EAAE;IAJN,CAAN;EAOD,CAbW;;EAcZC,OAAO,EAAC;IACNC,cAAc,CAACN,IAAD,EAAM;MAClB,OAAOO,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAP;IACD,CAHK;;IAQN,MAAMS,UAAN,GAAkB;MAClB,IAAI;QACF,MAAMC,SAAQ,GAAIC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;QAEA,MAAMC,GAAG,GAAC,MAAMf,EAAE,CAACgB,MAAH,EAAhB;QACAC,OAAO,CAACC,GAAR,CAAYH,GAAZ;QACAH,SAAS,CAACO,SAAV,GAAoB,EAApB;QACAJ,GAAG,CAACb,IAAJ,CAASkB,OAAT,CAAiBC,OAAM,IAAK;UAE1B,MAAMC,OAAM,GAAIT,QAAQ,CAACU,aAAT,CAAuB,KAAvB,CAAhB;UAEAC,MAAM,CAACC,MAAP,CAAcJ,OAAd,EAAuBD,OAAvB,CAA+BM,KAAK,IAAE;YACpC;YACA;YACAJ,OAAO,CAACK,MAAR,CAAeD,KAAI,GAAI,GAAvB;UACD,CAJD,EAJ0B,CAS1B;;UACAd,SAAS,CAACe,MAAV,CAAiBL,OAAjB;QACD,CAXD,EANE,CAkBF;QACA;QACA;QACA;QACA;MAED,CAxBD,CAyBC,OAAMM,CAAN,EAAQ;QACP,KAAKzB,SAAL,GAAiB,KAAKK,cAAL,CAAoBoB,CAAC,CAACzB,SAAtB,CAAjB;MACD;IACA,CArCK;;IAuCN,MAAM0B,WAAN,GACA;MACE,IAAIC,EAAC,GAAIC,MAAM,CAAC,KAAK3B,KAAN,CAAf,CADF,CAEE;;MACA,IAAI;QACF,MAAMW,GAAE,GAAI,MAAMf,EAAE,CAACgC,OAAH,CAAWF,EAAX,CAAlB;QACA,KAAK3B,SAAL,GAAe,KAAKK,cAAL,CAAoBO,GAAG,CAACb,IAAxB,CAAf;MACF,CAHA,CAGE,OAAO+B,KAAP,EAAc;QACd,KAAK9B,SAAL,GAAe,KAAKK,cAAL,CAAoByB,KAAK,CAAC9B,SAA1B,CAAf;MACF;IACD,CAjDK;;IAmDN,MAAM+B,YAAN,GACA;MACE,MAAMC,KAAK,GAAC,KAAK9B,QAAjB;MACA,MAAM+B,KAAK,GAAC,KAAK9B,QAAjB;;MACA,IAAI;QACF,MAAMS,GAAG,GAAC,MAAMf,EAAE,CAACqC,SAAH,CAAaF,KAAb,EAAoBC,KAApB,CAAhB;QACA,KAAKjC,SAAL,GAAe,KAAKK,cAAL,CAAoBO,GAAG,CAACb,IAAxB,CAAf;MACF,CAHA,CAGE,OAAO+B,KAAP,EAAc;QACd,KAAK9B,SAAL,GAAe,KAAKK,cAAL,CAAoByB,KAAK,CAACK,QAA1B,CAAf;MACF;IACD,CA7DK;;IA+DNC,cAAc,GACd;MACEtB,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACA,KAAKf,SAAL,GAAe,IAAf;IACF;;EAnEM;AAdI,CAAd","names":["DS","name","data","getResult","getId","getfName","getlName","methods","formatResponse","JSON","stringify","getAllData","container","document","getElementById","res","getAll","console","log","innerHTML","forEach","element","wrapper","createElement","Object","values","value","append","e","getDataById","id","Number","getById","error","searchByName","fname","lname","getByName","getRsult","clearGetOutput"],"sourceRoot":"","sources":["C:\\Users\\semad\\nodejs-vue-test\\my-app\\src\\components\\my-home.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"card\">\n      <div class=\"card-header\">Get all students data</div> \n      <img class=\"card-img-top\" src=\"holder.js/100x180/\" alt=\"\">\n      <div class=\"card-body\">\n        <div class=\"input-group mb-3\">\n          \n          <button class=\"btn btn-primary\" id = \"getAllButton\" @click=\"getAllData\">Get All</button> \n          \n          <input type=\"text\" v-model=\"getId\" class=\"form-control ml-2\" placeholder=\"Id\" />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" @click=\"getDataById\">Get By Id</button>\n          </div>\n\n          <input type=\"text\" v-model=\"getfName\" class=\"form-control ml-2\" placeholder=\"First Name\"/>\n          <div class=\"input-group-append\">\n            <input type=\"text\" v-model=\"getlName\" class=\"form-control ml-2\" placeholder=\"Last Name\"/>\n          </div>\n          \n          <div class=\"input-group-append-\">\n            <button class=\"btn btn-primary\" @click=\"searchByName\">Find by name</button>\n          </div>\n          <button class=\"btn btn-sm btn-warning ml-2\" @click=\"clearGetOutput\">Clear</button>\n          <div v-if=\"getResult\" class=\"alert alert-secondary mt-2\" role=\"alert\"> </div>\n          <div id = \"container\">\n           \n          </div>\n        </div> \n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import DS from '../services/DataService'\n  //import DataTable from 'datatables.net-vue3';\n  export default{\n    // components:{\n    //         DataTable\n    //     },\n    name: \"my-home\",\n    data(){\n      return{ \n        getResult: null,\n        getId: \"\",\n        getfName: \"\",\n        getlName: \"\"\n\n      }\n    },\n    methods:{\n      formatResponse(data){\n        return JSON.stringify(data)\n      },\n\n      \n\n\n      async getAllData(){\n      try {\n        const container = document.getElementById(\"container\")\n\n        const res=await DS.getAll()\n        console.log(res)\n        container.innerHTML=\"\"\n        res.data.forEach(element => {\n\n          const wrapper = document.createElement(\"div\")   \n\n          Object.values(element).forEach(value=>{\n            //const keydiv= document.createElement(\"div\")\n            //keydiv.append(key)\n            wrapper.append(value + \" \")\n          })\n          //this.getResult\n          container.append(wrapper)\n        })\n        // const res = await DS.getAll()\n        // console.log(typeof(res.data))\n        // res.data.forEach(element =>{\n        //   this.getResult=Array(element)\n        // })\n        \n       }\n       catch(e){\n        this.getResult = this.formatResponse(e.getResult)\n       }\n      },\n\n      async getDataById()\n      {\n        let id = Number(this.getId)\n        //console.log(id)\n        try {\n          const res = await DS.getById(id)\n          this.getResult=this.formatResponse(res.data)\n        } catch (error) {\n          this.getResult=this.formatResponse(error.getResult)\n        }\n      },\n\n      async searchByName()\n      {\n        const fname=this.getfName\n        const lname=this.getlName\n        try {\n          const res=await DS.getByName(fname, lname)\n          this.getResult=this.formatResponse(res.data)\n        } catch (error) {\n          this.getResult=this.formatResponse(error.getRsult)\n        }\n      },\n\n      clearGetOutput()\n      {\n        console.log(\"clearing output\")\n        this.getResult=null\n      }\n    }\n  }\n</script>\n\n"]},"metadata":{},"sourceType":"module"}