{"ast":null,"code":"import DS from '../services/DataService';\nexport default {\n  name: \"my-home\",\n\n  data() {\n    return {\n      getResult: null,\n      getId: \"\",\n      getfName: \"\",\n      getlName: \"\" // getResult:{\n      //   id: null,\n      //   fname: null,\n      //   lname: null,\n      //   username: null,\n      //   email: null,\n      //   password: null\n      // }\n\n    };\n  },\n\n  methods: {\n    formatResponse(data) {\n      // data = JSON.parse(JSON.stringify(data))\n      // const {id, fname, lname, username, password, email} = data\n      // return {id, fname, lname, username, password, email}\n      return JSON.stringify(data);\n    },\n\n    async getAllData() {\n      try {\n        const res = await DS.getAll();\n        const wrapper = document.createElement(\"div\");\n        res.data.forEach(element => {\n          Object.keys(element).forEach(key => {\n            const keydiv = document.createElement(\"div\");\n            keydiv.append(key);\n            wrapper.append(keydiv);\n          });\n        });\n        this.getResult = wrapper;\n      } catch (e) {\n        this.getResult = this.formatResponse(e.getResult);\n      }\n    },\n\n    async getDataById() {\n      let id = Number(this.getId); //console.log(id)\n\n      try {\n        const res = await DS.getById(id);\n        this.getResult = this.formatResponse(res.data);\n      } catch (error) {\n        this.getResult = this.formatResponse(error.getResult);\n      }\n    },\n\n    async searchByName() {\n      const fname = this.getfName;\n      const lname = this.getlName;\n\n      try {\n        const res = await DS.getByName(fname, lname);\n        this.getResult = this.formatResponse(res.data);\n      } catch (error) {\n        this.getResult = this.formatResponse(error.getRsult);\n      }\n    },\n\n    clearGetOutput() {\n      console.log(\"clearing output\");\n      this.getResult = null;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkCE,OAAOA,EAAP,MAAe,yBAAf;AAGA,eAAc;EAEZC,IAAI,EAAE,SAFM;;EAGZC,IAAI,GAAE;IACJ,OAAM;MACJC,SAAS,EAAE,IADP;MAEJC,KAAK,EAAE,EAFH;MAGJC,QAAQ,EAAE,EAHN;MAIJC,QAAQ,EAAE,EAJN,CAKJ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IAZI,CAAN;EAcD,CAlBW;;EAmBZC,OAAO,EAAC;IACNC,cAAc,CAACN,IAAD,EAAM;MAClB;MACA;MACA;MACA,OAAOO,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAP;IACD,CANK;;IAWN,MAAMS,UAAN,GAAkB;MAClB,IAAI;QACF,MAAMC,GAAG,GAAC,MAAMZ,EAAE,CAACa,MAAH,EAAhB;QACA,MAAMC,OAAM,GAAIC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;QACAJ,GAAG,CAACV,IAAJ,CAASe,OAAT,CAAiBC,OAAM,IAAK;UAC1BC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBD,OAArB,CAA6BI,GAAG,IAAE;YAChC,MAAMC,MAAM,GAAEP,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;YACAM,MAAM,CAACC,MAAP,CAAcF,GAAd;YACAP,OAAO,CAACS,MAAR,CAAeD,MAAf;UACD,CAJD;QAKD,CAND;QAOA,KAAKnB,SAAL,GAAiBW,OAAjB;MAED,CAZD,CAaC,OAAMU,CAAN,EAAQ;QACP,KAAKrB,SAAL,GAAiB,KAAKK,cAAL,CAAoBgB,CAAC,CAACrB,SAAtB,CAAjB;MACD;IACA,CA5BK;;IA8BN,MAAMsB,WAAN,GACA;MACE,IAAIC,EAAC,GAAIC,MAAM,CAAC,KAAKvB,KAAN,CAAf,CADF,CAEE;;MACA,IAAI;QACF,MAAMQ,GAAE,GAAI,MAAMZ,EAAE,CAAC4B,OAAH,CAAWF,EAAX,CAAlB;QACA,KAAKvB,SAAL,GAAe,KAAKK,cAAL,CAAoBI,GAAG,CAACV,IAAxB,CAAf;MACF,CAHA,CAGE,OAAO2B,KAAP,EAAc;QACd,KAAK1B,SAAL,GAAe,KAAKK,cAAL,CAAoBqB,KAAK,CAAC1B,SAA1B,CAAf;MACF;IACD,CAxCK;;IA0CN,MAAM2B,YAAN,GACA;MACE,MAAMC,KAAK,GAAC,KAAK1B,QAAjB;MACA,MAAM2B,KAAK,GAAC,KAAK1B,QAAjB;;MACA,IAAI;QACF,MAAMM,GAAG,GAAC,MAAMZ,EAAE,CAACiC,SAAH,CAAaF,KAAb,EAAoBC,KAApB,CAAhB;QACA,KAAK7B,SAAL,GAAe,KAAKK,cAAL,CAAoBI,GAAG,CAACV,IAAxB,CAAf;MACF,CAHA,CAGE,OAAO2B,KAAP,EAAc;QACd,KAAK1B,SAAL,GAAe,KAAKK,cAAL,CAAoBqB,KAAK,CAACK,QAA1B,CAAf;MACF;IACD,CApDK;;IAsDNC,cAAc,GACd;MACEC,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACA,KAAKlC,SAAL,GAAe,IAAf;IACF;;EA1DM;AAnBI,CAAd","names":["DS","name","data","getResult","getId","getfName","getlName","methods","formatResponse","JSON","stringify","getAllData","res","getAll","wrapper","document","createElement","forEach","element","Object","keys","key","keydiv","append","e","getDataById","id","Number","getById","error","searchByName","fname","lname","getByName","getRsult","clearGetOutput","console","log"],"sourceRoot":"","sources":["C:\\Users\\semad\\nodejs-vue-test\\my-app\\src\\components\\my-home.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"card\">\n      <div class=\"card-header\">Get all students data</div> \n      <img class=\"card-img-top\" src=\"holder.js/100x180/\" alt=\"\">\n      <div class=\"card-body\">\n        <div class=\"input-group mb-3\">\n          \n          <button class=\"btn btn-primary\" id = \"getAllButton\" @click=\"getAllData\">Get All</button> \n          \n          <input type=\"text\" v-model=\"getId\" class=\"form-control ml-2\" placeholder=\"Id\" />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" @click=\"getDataById\">Get By Id</button>\n          </div>\n\n          <input type=\"text\" v-model=\"getfName\" class=\"form-control ml-2\" placeholder=\"First Name\"/>\n          <div class=\"input-group-append\">\n            <input type=\"text\" v-model=\"getlName\" class=\"form-control ml-2\" placeholder=\"Last Name\"/>\n          </div>\n          \n          <div class=\"input-group-append-\">\n            <button class=\"btn btn-primary\" @click=\"searchByName\">Find by name</button>\n          </div>\n          <button class=\"btn btn-sm btn-warning ml-2\" @click=\"clearGetOutput\">Clear</button>\n\n          <div v-if=\"getResult\" class=\"alert alert-secondary mt-2\" role=\"alert\"><p>{{getResult}}</p></div>\n        </div> \n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import DS from '../services/DataService'\n\n\n  export default{\n\n    name: \"my-home\",\n    data(){\n      return{ \n        getResult: null,\n        getId: \"\",\n        getfName: \"\",\n        getlName: \"\"\n        // getResult:{\n        //   id: null,\n        //   fname: null,\n        //   lname: null,\n        //   username: null,\n        //   email: null,\n        //   password: null\n        // }\n      }\n    },\n    methods:{\n      formatResponse(data){\n        // data = JSON.parse(JSON.stringify(data))\n        // const {id, fname, lname, username, password, email} = data\n        // return {id, fname, lname, username, password, email}\n        return JSON.stringify(data)\n      },\n\n      \n\n\n      async getAllData(){\n      try {\n        const res=await DS.getAll()\n        const wrapper = document.createElement(\"div\")          \n        res.data.forEach(element => {\n          Object.keys(element).forEach(key=>{\n            const keydiv= document.createElement(\"div\")\n            keydiv.append(key)\n            wrapper.append(keydiv)\n          })\n        })\n        this.getResult = wrapper\n        \n       }\n       catch(e){\n        this.getResult = this.formatResponse(e.getResult)\n       }\n      },\n\n      async getDataById()\n      {\n        let id = Number(this.getId)\n        //console.log(id)\n        try {\n          const res = await DS.getById(id)\n          this.getResult=this.formatResponse(res.data)\n        } catch (error) {\n          this.getResult=this.formatResponse(error.getResult)\n        }\n      },\n\n      async searchByName()\n      {\n        const fname=this.getfName\n        const lname=this.getlName\n        try {\n          const res=await DS.getByName(fname, lname)\n          this.getResult=this.formatResponse(res.data)\n        } catch (error) {\n          this.getResult=this.formatResponse(error.getRsult)\n        }\n      },\n\n      clearGetOutput()\n      {\n        console.log(\"clearing output\")\n        this.getResult=null\n      }\n    }\n  }\n</script>\n\n"]},"metadata":{},"sourceType":"module"}